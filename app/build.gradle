plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'dagger.hilt.android.plugin'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}


def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--dirty'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null
    }
}

def getVersionCode = { ->
    try {
        def code = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'tag', '--list'
            standardOutput = code
        }
        return code.toString().split("\n").size()
    }
    catch (ignored) {
        return 1
    }
}

android {
    namespace 'com.id.etourism'
    compileSdk 33

    defaultConfig {
        applicationId "com.id.etourism"
        minSdk 24
        targetSdk 33
        versionCode getVersionCode()
        versionName getVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
        dataBinding true
        mlModelBinding true
    }
    lint {
        abortOnError false
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.activity:activity-ktx:1.6.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.firebase:firebase-firestore:24.1.1'
    implementation 'com.google.firebase:firebase-auth-ktx:21.0.3'
    implementation 'org.tensorflow:tensorflow-lite-support:0.1.0'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'


    //Tensorflow
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.google.guava:guava:28.1-android'
    implementation 'org.tensorflow:tensorflow-lite:2.2.0'


    //FIREBASE
    implementation platform('com.google.firebase:firebase-bom:32.0.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // camerax
    def camerax_version = "1.1.0-beta03"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"

    // Multidex
    implementation 'androidx.multidex:multidex:2.0.1'

    // dependency injection
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-android-compiler:2.42"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Kotlin Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'

    // Lifecycle (ViewModel & LiveData)
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:31.1.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Google Play Services
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.libraries.places:places:3.0.0'
    implementation 'com.google.maps:google-maps-services:0.9.3'
    implementation 'org.slf4j:slf4j-simple:1.7.25'
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    implementation 'com.google.android.gms:play-services-vision:20.1.3'

    // Splitties
    implementation "com.louiscad.splitties:splitties-fun-pack-android-material-components-with-views-dsl:3.0.0"

    // Room DB
    implementation "androidx.room:room-runtime:2.4.3"
    kapt "androidx.room:room-compiler:2.4.3"
    implementation "androidx.room:room-ktx:2.4.3"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    //  event bus
    implementation 'org.greenrobot:eventbus:3.2.0'

    // Joda Time
    implementation 'joda-time:joda-time:2.10.10'

    // Loading button
    implementation group: 'com.apachat', name: 'loadingbutton-android', version: '1.0.11'

    // debugging
    implementation "com.jakewharton.timber:timber:5.0.1"
    implementation "com.facebook.stetho:stetho:1.6.0"
    implementation "com.facebook.stetho:stetho-okhttp3:1.6.0"

    //lottieanimation
    implementation "com.airbnb.android:lottie:3.0.7"

    //Glide = menampilkan gambar
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'

    //sdp
    implementation 'com.intuit.sdp:sdp-android:1.1.0'

    // ViewPager & Recylerview indicator
    implementation 'me.relex:circleindicator:2.1.6'

    def core_version = "1.6.0"
    implementation("androidx.core:core-ktx:${core_version}")


    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:32.1.0')

    // Add the dependency for the Firebase ML model downloader library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-ml-modeldownloader-ktx'

    // Also add the dependency for the TensorFlow Lite library and specify its version
    implementation 'org.tensorflow:tensorflow-lite:2.6.0'

    implementation 'com.google.firebase:firebase-ml-model-interpreter:22.0.3'
}